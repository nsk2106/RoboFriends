{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robot","cardComponent","map","user","i","SearchBox","searchfield","searchchange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","filterrobot","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,GAC1B,OAEI,sBAAKC,UAAY,sDAAjB,UACI,qBAAKC,IAAM,SAASC,IAAG,+BAA2BH,KAClD,gCACI,mCAAMF,EAAN,OACA,kCAAKC,YCaNK,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACTC,EAAgBD,EAAME,KAAI,SAACC,EAAMC,GACnC,OACA,cAAC,EAAD,CAEAT,GAAMK,EAAMI,GAAGT,GACfF,KAAQO,EAAMI,GAAGX,KACjBC,MAASM,EAAMI,GAAGV,OAHZU,MAQV,OACI,8BACKH,KCDEI,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKX,UAAY,MAAjB,SACA,uBACAA,UAAY,yBACZY,KAAO,SACPC,YAAc,cACdC,SAAYH,OCCLI,EATA,SAACC,GAEZ,OACK,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACAJ,EAAMK,YCoBAC,G,wDAvBZ,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAO,CACRC,UAAU,GAHA,E,qDAQlB,SAAkBC,EAAOC,GACpBC,KAAKC,SAAS,CACXJ,UAAU,M,oBAKjB,WACG,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKX,MAAMK,a,GApBEQ,cCmDZC,E,kDA7CX,aAAc,IAAD,8BACT,gBAeRC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAftC,EAAKX,MAAQ,CACTnB,MAAQ,GACRM,YAAc,IAJT,E,qDASjB,WAAoB,IAAD,OACfyB,MAAM,8CACNC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UACzBF,MAAK,SAAA7B,GAAS,EAAKqB,SAAS,CAAExB,MAAOG,S,oBAS1C,WAAS,IAAD,EAC6BoB,KAAKJ,MAA3BnB,EADP,EACOA,MAAOM,EADd,EACcA,YACR6B,EAAcnC,EAAMoC,QAAO,SAAApC,GACjC,OAAOA,EAAMP,KAAK4C,cAAcC,SAAShC,EAAY+B,kBAEzD,OAAqB,IAAjBrC,EAAMuC,OACC,2CAGP,sBAAK3C,UAAY,KAAjB,UACA,oBAAIA,UAAW,KAAf,yBACA,cAAC,EAAD,CAAWW,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,MAASmC,e,GApCjBV,aCKHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAMjDX,M","file":"static/js/main.334a8c47.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name , email , id}) => { \n    return (\n     \n        <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\"> \n            <img alt = \"robots\" src= {`https://robohash.org/${id}`} />\n            <div>\n                <h2> {name} </h2>\n                <p> {email}</p>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../components/Card';\n\nconst CardList = ({robot}) => { \n    const cardComponent = robot.map((user, i) => {\n        return (\n        <Card \n        key ={i} \n        id = {robot[i].id} \n        name = {robot[i].name} \n        email = {robot[i].email}\n        />\n        );\n    })\n\n    return (\n        <div>\n            {cardComponent}\n         </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({searchfield, searchchange}) => {\n    return (\n        <div className = 'pa2'>\n        <input \n        className = 'pa3 ba bg-lighest-blue'\n        type = 'search' \n        placeholder = 'Search here'\n        onChange = {searchchange}\n        />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\n    return (\n         <div style ={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n        {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n   constructor(props){\n       super(props);\n       this.state ={\n           hasError: false\n       }\n   }\n\n\n   componentDidCatch(error, info){\n        this.setState({\n           hasError: true\n        });\n   }\n\n\n    render() { \n       if(this.state.hasError){\n           return <h1> Opps !!!! we have error </h1>\n       }\n       return this.props.children\n    }\n}\n \nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport '../containers/App.css';\nimport ErrorBoundry  from '../components/ErrorBoundry'\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            robot : [],\n            searchfield : '' \n        }\n         \n    }\n    //react life cycle \ncomponentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users').\n    then(response => response.json())\n    .then(user => {this.setState({ robot: user })\n    });\n}\n\nonSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value})\n    \n}\n\nrender(){\n        const {robot, searchfield} = this.state;\n        const filterrobot = robot.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n    })\n    if (robot.length === 0){\n        return <h1> Loading </h1>\n    }else {\n    return(\n        <div className = 'tc'> \n        <h1 className ='f1'>RoboFriends</h1>\n        <SearchBox searchchange= {this.onSearchChange} />\n        <Scroll>\n            <ErrorBoundry>\n                <CardList robot = {filterrobot}/>\n            </ErrorBoundry>\n        </Scroll>\n        </div>\n    );\n    }\n}\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';  \nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}